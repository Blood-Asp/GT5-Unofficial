buildscript {
    repositories {
        mavenCentral()
		jcenter()
		//maven {
		//	name = "forge"
		//	url = "https://files.minecraftforge.net/maven"
		//}
		maven {
			name = "gt"
			url = "https://gregtech.overminddl1.com/"
		}

        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'idea'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.gt.version}"
group= "gregtech"
archivesBaseName = "gregtech"


sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {
	version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

idea { module { inheritOutputDirs = true } }

configurations {
    provided
    embedded
    compile.extendsFrom provided, embedded
}

repositories {
	//Use OvermindDl1's Repo instead
	maven {
		name = "gt"
		url = "https://gregtech.overminddl1.com/"
	}
	maven {
		name = "sonatype"
		url = "https://oss.sonatype.org/content/repositories/snapshots/"
	}
	maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
    maven { // EnderIO & EnderCore
        name 'tterrag Repo'
        url "http://maven.tterrag.com/"
	}

}

dependencies {

	//compile "mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
	compileOnly "net.sengir.forestry:forestry_1.7.10:4.2.16.64:dev"
	compileOnly "com.mod-buildcraft:buildcraft:7.1.23:dev"
	compileOnly "com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf"
	compileOnly "micdoodle8.mods:MicdoodleCore:1.7-3.0.12.504:Dev"
	compileOnly "micdoodle8.mods:GalacticraftCore:1.7-3.0.12.504:Dev"
	compileOnly "micdoodle8.mods:Galacticraft-Planets:1.7-3.0.12.504:Dev"
	compileOnly "thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev"
	compileOnly "mods.railcraft:Railcraft_1.7.10:9.12.3.0:dev"
	compileOnly "cofh:CoFHLib:1.7.10R3.0.3:dev"
	compileOnly "cofh:CoFHCore:1.7.10R3.0.4:dev"
	compileOnly "applecore:AppleCore:1.7.10-3.1.1:deobf"
	compileOnly "blusunrize:ImmersiveEngineering:0.7.7:deobf"
    compileOnly ("appeng:appliedenergistics2:rv3-beta-6:dev") {
        exclude module: '*'
    }	
    compileOnly "net.industrial-craft:industrialcraft-2:${config.ic2.version}:dev"	
	
	
    provided "com.enderio.core:EnderCore:${config.enderiocore.version}:dev"
    provided ("com.enderio:EnderIO:${config.enderio.version}:dev") {
        transitive = false
    }
    provided name: 'IC2NuclearControl', version: config.nc.version, ext: 'jar'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	exclude '**/Thumbs.db'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    manifest {
        //attributes 'FMLCorePlugin': 'WhateverLoaderClass'
        //attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

artifacts {
    archives devJar
}