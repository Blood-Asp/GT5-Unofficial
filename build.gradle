buildscript {
    repositories {
        mavenCentral()
		jcenter()	
        //maven {
        //    name = "forge"
        //    url = "http://files.minecraftforge.net/maven"
        //}
		maven {
			name = "gt"
			url = "https://gregtech.overminddl1.com/"
		}	
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

// Because Forge is too stupid to fix Deprecation Issues, and we cannot fix it on our end! (until we fork Forge)
allprojects {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint:deprecation"
	}
}

apply plugin: 'eclipse'
eclipse {
	classpath {
		downloadJavadoc = true
		downloadSources = true
	}
}

apply plugin: 'idea'
idea{
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

apply plugin: 'forge'

file "build.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.gt.version}"
group= "gregtech"
archivesBaseName = "gregtech"

sourceCompatibility = 1.7
targetCompatibility = 1.7
compileJava.options.bootClasspath = org.gradle.internal.jvm.Jvm.current().getJre().getHomeDir().toString() +"/lib/rt.jar"
compileJava {
	options.encoding = "UTF-8"
}

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "eclipse"
}

idea { module { inheritOutputDirs = true } }

configurations {
    provided
    embedded
    compile.extendsFrom provided, embedded
}

repositories {
	maven {
		name = "gt"
		url = "http://gregtech.overminddl1.com/"
	}
	maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
}

dependencies {
//    compile fileTree(dir: 'libs', include: '*.jar')

	// Mostly Used for compileOnly, if you prefer normal IC2, uncomment it instead.
    //provided "net.industrial-craft:industrialcraft-2:${config.ic2.version}:dev"  
    compile "ic2:IC2Classic:1.2.1.8:dev"
    
	compile "mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10:dev"
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
	
	compileOnly "com.enderio.core:EnderCore:1.7.10-0.2.0.39_beta:dev"
	// "com.enderio:EnderIO:1.7.10-2.3.0.429_beta:dev"  
	compileOnly "com.enderio:EnderIO:1.7.10-2.3.0.430_beta:dev"
	
	compileOnly "cofh:CoFHCore:1.7.10R3.0.4:dev"
	compileOnly "cofh:CoFHLib:1.7.10R3.0.3:dev"
	compileOnly "com.mod-buildcraft:buildcraft:7.1.23:dev"
	compileOnly "net.sengir.forestry:forestry_1.7.10:4.2.16.64:dev"		
	compileOnly "mods.railcraft:Railcraft_1.7.10:9.12.3.0:dev"
	
	compileOnly "micdoodle8.mods:GalacticraftCore:1.7-3.0.12.504:Dev"
	compileOnly "micdoodle8.mods:MicdoodleCore:1.7-3.0.12.504:Dev"
	
	compileOnly "thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev"	
	compileOnly "com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf"	
	compileOnly "appeng:appliedenergistics2:rv3-beta-6:dev"	
	compileOnly "applecore:AppleCore:1.7.10-3.1.1:deobf"
	compileOnly "com.shedar.IC2NuclearControl:IC2NuclearControl:2.4.3a:dev"
    
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	exclude '**/Thumbs.db'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    manifest {
        //attributes 'FMLCorePlugin': 'WhateverLoaderClass'
        //attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

artifacts {
    archives devJar
}