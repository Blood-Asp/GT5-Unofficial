Technical explanation of JSON elements used in machine recipes:
Top level is an array of recipe objects.
Each recipe object allows the following keys, in any order:
"inputs" - an array of the items input to the machine, each of which allows the following keys:
    "ore" or "oredict" - an oredictionary name such as "ingotIron".
    "item" - an internal item name, such as "minecraft:dirt" or "gregtech:gt.metaitem.02:27513";
            also allows a special fake modid "GTItemList" to reference an item from GregTech's ItemList enum,
            which is often more readable. The "*" character can be used as a wildcard for metadata.
    "count" - the number of copies of the item (or oredictionary entry) needed for the recipe.  Can be 0 to indicate the item should only be required in the slot, 
            but not consumed.
    "nbt" - NBT tags required for the input item.  Details below.
    "circuit" - a programmed circuit with the specified configuration number, and count automatically set to 0.
    "comment", "displayName" - string value, ignored by the recipe reader, but may help make the recipe more human-readable in case the item's internal name is cryptic.
"outputs" - an array of the items output by the machine, similar to "inputs", but allows the following additional key:
    "chance" - for a given output, a floating point value clamped between 0.0 and 1.0 indicating how likely the output should be.  
            defaults to 1.0 (always output).  Granularity is 0.0001 or 0.01%.
"inputFluids" or "fluidInputs" - an array of fluid objects input to the machine, with the following keys:
    "fluid" - the name of the fluid, as registered in the Forge fluid registry.
    "amount" - the volume in liters (aka millibuckets) of fluid to use.
    "solderFluids" - special value for input fluids, specify the volume of molten soldering alloy the recipe should use, and if configuration allows,
        additional recipes for lower-quality soldering fluids (molten tin and molten lead) will automatically be generated with correspondingly higher fluid volumes.
"outputFluids" or "fluidOutputs" - an array of fluid objects output by the machine, defined similar to "inputFluids".
"fluidsPerCircuit" - an array of output fluids to generate separate recipes for, selected by programmed circuits, starting at configuration 1.  Overrides solderFluids
    and useCuttingFluids, though it isn't likely to make sense to use them together anyway.
"duration" - integer value for the time in ticks to complete the recipe at default voltage.
"EUt" - integer value for the EU/t required for the recipe.
"specialValue" - string, can be "lowgravity" or "cleanroom" to indicate those requirements for the recipe, otherwise the string will be parsed as an integer 
and the meaning may depend on the machine it is used in.
"blastTemp" - integer value for the temperature required in a blast furnace.
"startingCost" - integer value for the EU required to start a fusion reactor recipe.
"enabled" - if false, disables the recipe.
"enableCondition" - string to indicate the recipe should be enabled based on a specified condition, such as whether a certain mod is loaded, 
    a fluid exists, or a material has a "parent mod".
"hidden" - if true, hides the recipe from NEI.
"useCuttingFluids" - if true, automatically generates copies of the recipe that use the appropriate amount of lubricant, water, or distilled water, 
    as well as adjusted durations.
"optimize" - reduces the recipe to smaller steps if input and output quantities and duration permit.  Defaults to true.

NBT tags:
In an input or output item (or even an input alternate), these can be specified as an array of objects, with "tag"/"tagName"/"name"/"key", "type", and "value".
These should all be given as strings in the JSON, and can technically be in any order, but the "type" key indicates how the recipe will interpret "value".
"type" can be "boolean", "byte", "double", "float", "int", "long", "short", or "string" (case-insensitive).
Inputs can have NBT tags specified to change how they're shown when viewing the recipe in NEI, but in most cases they will be ignored by the machine.
Outputs will have the NBT tags specified in the recipe.

The following files in this folder will be read for recipes for the corresponding machines, if the files exist: